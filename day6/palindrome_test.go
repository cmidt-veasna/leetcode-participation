package day6

import (
	"testing"

	"github.com/stretchr/testify/require"
)

type palinCase struct {
	in        []int
	bitLength int
	out       []int64
}

var palindromeCases = []*palinCase{
	{
		[]int{1, 2, 3, 4, 5, 91},
		3,
		[]int64{101, 111, 121, 131, 141, -1},
	},
	{
		[]int{733795536, 540274789, 80, 22, 29, 58, 86, 176670151, 793704731, 37, 3, 18, 160574937},
		4,
		[]int64{-1, -1, 8998, 3113, 3883, 6776, 9559, -1, -1, 4664, 1221, 2772, -1},
	},
	{[]int{1, 10, 2, 3, 22}, 2, []int64{11, -1, 22, 33, -1}},
	{
		[]int{696771750, 62, 47, 14, 17, 192356691, 209793716, 23, 220935614, 447911113, 5, 4, 72},
		4,
		[]int64{-1, 7117, 5665, 2332, 2662, -1, -1, 3223, -1, -1, 1441, 1331, 8118},
	},
	{
		[]int{58, 29, 358732919, 149198876, 246393513, 104605183, 18363825},
		9,
		[]int64{100575001, 100282001, -1, -1, -1, -1, -1},
	},
	{
		[]int{965598625, 198268812, 541725641, 18, 9, 446798683, 343077910, 26, 31},
		8,
		[]int64{-1, -1, -1, 10177101, 10088001, -1, -1, 10255201, 10300301},
	},
	{
		[]int{659108523, 547414705, 89, 81, 4, 346605675, 12, 355852667, 34, 781116116},
		7,
		[]int64{-1, -1, 1088801, 1080801, 1003001, -1, 1011101, -1, 1033301, -1},
	},
	{
		[]int{35, 24567885, 189357358, 51, 951679309, 11, 9202108, 74, 46, 9, 178379664, 22},
		6,
		[]int64{134431, -1, -1, 150051, -1, 110011, -1, 173371, 145541, 108801, -1, 121121},
	},
	{
		[]int{6, 8, 7, 481653085, 199406945, 2, 449362031, 75012737, 9, 3, 8, 1, 696188278, 7},
		2,
		[]int64{66, 88, 77, -1, -1, 22, -1, -1, 99, 33, 88, 11, -1, 77},
	},
	{[]int{6, 15, 120}, 5, []int64{10501, 11411, 21912}},
	{[]int{1, 2, 3, 4, 5, 90}, 3, []int64{101, 111, 121, 131, 141, 999}},
	{[]int{1, 2, 3, 4, 5, 90}, 5, []int64{10001, 10101, 10201, 10301, 10401, 18981}},
	{[]int{1, 2, 3}, 2, []int64{11, 22, 33}},
	{[]int{2, 4, 6}, 4, []int64{1111, 1331, 1551}},
	{
		[]int{2, 201429812, 8, 520498110, 492711727, 339882032, 462074369, 9, 7, 6},
		1,
		[]int64{2, -1, 8, -1, -1, -1, -1, 9, 7, 6},
	},
}

func TestKthPalindrome(t *testing.T) {
	for i, tc := range palindromeCases {
		t.Logf("TestKthPalindrome #%d", i+1)
		result := kthPalindrome(tc.in, tc.bitLength)
		require.Equal(t, tc.out, result)
	}
}
