package day3

import (
	"testing"

	"github.com/stretchr/testify/require"
)

var testReplaceNonCoprimes = [][][]int{
	{
		{6, 4, 3, 2, 7, 6, 2}, {12, 7, 6},
	},
	{
		{2, 2, 1, 1, 3, 3, 3}, {2, 1, 1, 3},
	},
	{
		{287, 41, 49, 287, 899, 23, 23, 20677, 5, 825}, {2009, 20677, 825},
	},
	{
		{11, 9, 3, 9, 3, 9, 3, 9, 3, 3, 3, 3, 3, 33, 33, 3, 3, 3, 9, 3, 3, 9, 3, 33, 3, 33, 9, 33, 33, 33, 9, 3, 3, 9, 3, 3, 9, 3, 3, 33, 33, 9, 3, 33, 9, 3, 33, 3, 3, 33, 9, 3, 9, 33, 3, 3, 9, 9, 33, 3, 3, 3485, 85, 3485, 17, 85, 5, 205, 5, 1025, 85, 85, 205, 205, 25, 5, 425, 85, 5, 425, 5, 1025, 5, 205, 5, 425, 17, 289},
		{99, 296225},
	},
	{
		{8303, 361, 8303, 361, 437, 361, 8303, 8303, 8303, 6859, 19, 19, 361, 70121, 70121, 70121, 70121, 70121, 70121, 70121, 70121, 70121, 70121, 70121, 70121, 70121, 70121, 70121, 70121, 1271, 31, 961, 31, 7, 2009, 7, 2009, 2009, 49, 7, 7, 8897, 1519, 31, 1519, 217},
		{157757, 70121, 1930649},
	},
	{
		{14430, 2, 2, 4, 2, 4, 2, 78, 111, 8658, 90, 78, 3, 3, 6, 30, 3330, 1950, 45, 444, 1690, 390, 119, 24157, 119, 49, 343, 7, 49, 7, 7, 833, 5831, 833, 9947, 7, 833, 24157, 7, 49, 5831, 119, 7, 7, 24157, 1421, 7, 24157, 49, 3451, 7, 1421, 3451, 24157, 5831, 7, 49, 7, 1421, 5831, 24157, 343, 833, 7, 9947, 3451, 203, 7, 833, 9947, 24157, 7, 7, 1421, 119, 49, 7, 7, 3451, 7, 24157, 7, 343, 24157, 17, 833, 3451, 49, 1421, 7, 5831, 5831, 833, 24157, 24157, 833, 3451, 2023, 9947, 9947, 7, 9947, 24157, 17, 17, 17, 833, 1421, 343, 833, 7, 24157, 49, 14161, 49, 7, 119, 7, 7, 833, 24157, 1421, 1421, 7, 7, 24157, 1421, 1421, 49, 9947, 7, 7, 343, 9947, 833, 7, 49, 1421, 9947, 833, 49, 7, 343, 7, 49, 49, 1421, 24157, 5831, 24157, 24157, 7, 7, 7, 24157, 24157, 2023, 9947, 7, 119, 119, 49, 343, 5831, 343, 24157, 7, 119, 7, 7, 343, 3451, 119, 289, 7, 7, 1421, 5831, 7, 203, 343, 7, 9947, 7, 7, 343, 343, 119, 343, 7, 49, 49, 203, 7, 24157, 7, 7, 7, 49, 24157, 7, 1421, 833, 24157, 7, 47, 94, 2, 4, 2, 4, 2, 94, 2, 2, 4, 4, 94, 4, 2, 4, 94, 4, 4, 2, 2, 4, 2, 4, 4, 2, 2, 2, 4, 4, 2, 2, 11, 121, 11, 11, 11, 11, 11, 11, 11, 121, 11, 121, 121, 11, 11, 121, 407, 11, 11, 11, 11, 11, 11, 11, 11, 11, 407, 2, 2, 4, 4, 46, 2, 2, 46, 46, 4, 2, 46, 2, 2, 46, 23, 46, 4, 4, 4, 2, 46, 4, 65, 5, 3, 39, 455, 3, 3, 93, 351, 1365, 49, 273, 21, 4095, 975, 6045, 39, 2015, 23, 12167, 529, 23, 12167, 529, 23, 529, 12167, 12167, 12167, 529, 23, 12167, 12167, 23, 23, 35, 5, 185, 1025, 53095, 1813, 35, 7, 9065, 1813, 25, 5, 1295, 259, 7, 7, 245, 35, 925, 5, 5, 35, 5, 25, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711, 47711},
		{5627700, 2874683, 188, 4477, 92, 13329225, 12167, 1858325, 47711},
	},
}

func TestReplaceNonCoprimes(t *testing.T) {
	for i, tc := range testReplaceNonCoprimes {
		t.Logf("TestReplaceNonCoprimes (small) case #%d", i+1)
		require.Equal(t, tc[1], replaceNonCoprimes(tc[0]))
	}
}
